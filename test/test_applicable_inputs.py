# coding: utf-8

"""
    Marlowe Runtime REST API

    REST API for Marlowe Runtime

    The version of the OpenAPI document: 0.0.5.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.applicable_inputs import ApplicableInputs  # noqa: E501

class TestApplicableInputs(unittest.TestCase):
    """ApplicableInputs unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicableInputs:
        """Test ApplicableInputs
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicableInputs`
        """
        model = ApplicableInputs()  # noqa: E501
        if include_optional:
            return ApplicableInputs(
                choices = [
                    openapi_client.models.can_choose.CanChoose(
                        can_choose_between = [
                            openapi_client.models.bound.Bound(
                                from = 56, 
                                to = 56, )
                            ], 
                        case_index = 56, 
                        for_choice = openapi_client.models.choice_id.ChoiceId(
                            choice_name = '', 
                            choice_owner = null, ), 
                        is_merkleized_continuation = True, )
                    ],
                deposits = [
                    openapi_client.models.can_deposit.CanDeposit(
                        can_deposit = 56, 
                        case_index = 56, 
                        into_account = null, 
                        is_merkleized_continuation = True, 
                        of_token = openapi_client.models.token.Token(
                            currency_symbol = '', 
                            token_name = '', ), 
                        party = null, )
                    ],
                notify = openapi_client.models.can_notify.CanNotify(
                    case_index = 56, 
                    is_merkleized_continuation = True, )
            )
        else:
            return ApplicableInputs(
                choices = [
                    openapi_client.models.can_choose.CanChoose(
                        can_choose_between = [
                            openapi_client.models.bound.Bound(
                                from = 56, 
                                to = 56, )
                            ], 
                        case_index = 56, 
                        for_choice = openapi_client.models.choice_id.ChoiceId(
                            choice_name = '', 
                            choice_owner = null, ), 
                        is_merkleized_continuation = True, )
                    ],
                deposits = [
                    openapi_client.models.can_deposit.CanDeposit(
                        can_deposit = 56, 
                        case_index = 56, 
                        into_account = null, 
                        is_merkleized_continuation = True, 
                        of_token = openapi_client.models.token.Token(
                            currency_symbol = '', 
                            token_name = '', ), 
                        party = null, )
                    ],
        )
        """

    def testApplicableInputs(self):
        """Test ApplicableInputs"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
